// –§–æ–º–∏—á–µ–≤ –ê–Ω–¥—Ä–µ–π –ú–∏—Ö–∞–π–ª–æ–≤–∏—á, II –í–∞—Ä–∏–∞–Ω—Ç
// –õ–†11

/*
–ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É,–∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç 
—Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω
—Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ 
—Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
*/

// P.S. –ù–∞ a–Ω–≥–ª–∏–π—Å–∫–æ–π –≤–∏–Ω–¥–µ –ª–∞–±–∞ –Ω–µ –∫–æ–º–ø–∏–ª–∏—Ç—Å—è
// –∏–∑-–∑–∞ —Ü—ã–≥–∞–Ω—Å–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞.cpp

#include <iostream>
#include <fstream>
#include <string>
#include <regex>
using namespace std;
int main()
{
    string line, word;
    cin >> word;
    regex r(word);
    ifstream in("lab11_strings.txt");
    if (in.is_open())
        while (getline(in, line))
            if (regex_search(line, r))
                cout << line << endl;
    in.close();
    cin >> word; // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏.
    return 0;
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
/*                                                           */
/*                 –ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫ —Ä–∞–±–æ—Ç–µ üòä                    */
/*                                                           */
/* –û—á–µ–Ω—å –ª–µ–≥–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ–µ —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–æ–º–æ—â—å—é      */
/* —Ñ–∞–π–ª–æ–≤—ã—Ö –ø–æ—Ç–æ–∫–æ–≤, –∏ –ø–æ–∏—Å–∫ —Å–ª–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–∫–∏       */
/*                                                           */
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
