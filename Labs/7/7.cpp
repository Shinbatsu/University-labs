// –§–æ–º–∏—á–µ–≤ –ê–Ω–¥—Ä–µ–π –ú–∏—Ö–∞–π–ª–æ–≤–∏—á, II –í–∞—Ä–∏–∞–Ω—Ç
// –õ–†7

/*
–û–ø–∏—Å–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –∏–º–µ–Ω–µ–º STUDENT, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: 
—Ñ–∞–º–∏–ª–∏—è –∏ –∏–Ω–∏—Ü–∏–∞–ª—ã, –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, 
—É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å(–º–∞—Å—Å–∏–≤ –∏–∑ –ø—è—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤). 
–ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –≤—ã–ø–æ–ª–Ω—è—é—â—É—é —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
–ó–∞–¥–∞–Ω–∏–µ 1:
–í–≤–æ–¥ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –≤ –º–∞—Å—Å–∏–≤, 
—Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –ø—è—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä —Ç–∏–ø–∞ STUDENT;
–ó–∞–ø–∏—Å–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–ø–æ—Ä—è–¥–æ—á–µ–Ω—ã 
–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞.
–ó–∞–¥–∞–Ω–∏–µ 2:
–í—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Ñ–∞–º–∏–ª–∏–π –∏ –Ω–æ–º–µ—Ä–æ–≤ 
–≥—Ä—É–ø–ø –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∏–º–µ—é—â–∏—Ö –æ—Ü–µ–Ω–∫–∏ 
4 –∏ 5;–µ—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–µ—Ç,–≤—ã–≤–µ—Å—Ç–∏ 
—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
*/

// P.S. –ù–∞ a–Ω–≥–ª–∏–π—Å–∫–æ–π –≤–∏–Ω–¥–µ –ª–∞–±–∞ –Ω–µ –∫–æ–º–ø–∏–ª–∏—Ç—Å—è
// –∏–∑-–∑–∞ —Ü—ã–≥–∞–Ω—Å–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞.cpp

#include <vector>
#include <algorithm>
#include <string>
#include <iostream>
using namespace std;
struct STUDENT
{
    string name;
    string initials;
    int groupNumber;
    int notes[5];
};
typedef vector<STUDENT> vS;

bool R(int a[])
{
    for (int i = 0; i < 5; i++)
        if (a[i] == 4 || a[i] == 5)
            return true;
    return false;
}
void FS(vS a)
{
    vS res;
    for (int i = 0; i < a.size(); i++)
        if (R(a[i].notes))
            res.push_back(a[i]);
    if (res.size()==0)
        cout<<"Students with notes 4 or 5 not found";
    else
        for (int i = 0; i < res.size(); i++)
            cout << res[i].name << " " << res[i].groupNumber << endl;
}
int SM(int a[], double res = 0)
{
    for (auto i = 0; i < 5; i++)
        res += a[i];
    return res / 5;
};
vS SS(vS st)
{
    sort(st.begin(), st.end(), [](auto a, auto b)
         { return SM(a.notes) > SM(b.notes); });
    return st;
}
int main(int argc, char const *argv[])
{
    vS students;
    while (students.size() < 5)
    {
        STUDENT student;
        cout << "Type \"Name\" :" << endl;
        cin >> student.name;
        cout << "Type \"Initials\" :" << endl;
        cin >> student.initials;
        cout << "Type \"Group number\" :" << endl;
        cin >> student.groupNumber;
        for (int i = 0; i < 5; i++)
        {
            cout << "Type Notes" << endl;
            cin >> student.notes[i];
        }
        students.push_back(student);
    }
    SS(students);
    FS(students);
    return 0;
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
/*                                                  */
/*               –ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫ —Ä–∞–±–æ—Ç–µ üòä             */
/*                                                  */
/* vS - vector<STUDENT>                             */
/*                                                  */
/* SS - –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞–Ω–∏–µ 1                 */
/* –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ sort —Å —É–º–Ω–æ–π          */
/* —Ñ—É–Ω–∫—Ü–∏–µ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏                              */
/*                                                  */
/* FS - –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–¥–∞–Ω–∏–µ 2                 */
/* –ü–µ—á–∞—Ç–∞–µ—Ç –∏–º—è –∏ –≥—Ä—É–ø–ø—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ         */
/* –∏–º–µ—é—Ç —Å—Ä–µ–¥–∏ –æ—Ü–µ–Ω–æ–∫ 4 –∏–ª–∏ 5, –µ—Å–ª–∏  —Ç–∞–∫–∏—Ö          */
/* —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ—Ç—Å—è, —Ç–æ –≤—ã–≤–µ–¥–µ—Ç –Ω–∞–¥–ø–∏—Å—å:       */
/* "Students with notes 4 or 5 not found"           */
/*                                                  */
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;