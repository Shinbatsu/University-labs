// –§–æ–º–∏—á–µ–≤ –ê–Ω–¥—Ä–µ–π –ú–∏—Ö–∞–π–ª–æ–≤–∏—á, II –í–∞—Ä–∏–∞–Ω—Ç
// –õ–†17

/*
–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∫–ª–∞—Å—Å–∞ "—Å—Ç–µ–∫". 
–ò—Å–ø–æ–ª—å–∑–æ–≤–≤–∞—Ç—å –µ–≥–æ –ø—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ 
–∑–∞–¥–∞—á–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ 7 –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π 
—Ä–∞–±–æ—Ç—ã ‚Ññ 14.
*/

// P.S. –ù–∞ a–Ω–≥–ª–∏–π—Å–∫–æ–π –≤–∏–Ω–¥–µ –ª–∞–±–∞ –Ω–µ –∫–æ–º–ø–∏–ª–∏—Ç—Å—è
// –∏–∑-–∑–∞ —Ü—ã–≥–∞–Ω—Å–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞.cpp

#include <iostream>
#include <string>
#include <vector>
#include <stack>

const int SIZE=8;
using namespace std;

  bool path_finder(string maze)
  {
    vector<string> temp;
    string t = "";
    for (size_t i = 0; i < maze.length(); i++)
      if (maze[i] == '\n')
        temp.push_back(t), t.clear();
      else
        t.push_back(maze[i]);
    if (!t.empty())
      temp.push_back(t);
    vector<vector<char>> table;
    for (string &ele : temp)
    {
      vector<char> t;
      for (size_t i = 0; i < ele.length(); i++)
        t.push_back(ele[i]);
      table.push_back(t);
    }
    int M = table[0].size() - 1;
    stack<pair<int, int>> st;
    st.push({0, 0});
    bool visited[SIZE + 1][SIZE + 1];
    for (int i = 0; i <= M; i++)
      for (int j = 0; j <= M; j++)
        visited[i][j] = false;
    while (!st.empty())
    {
      pair<int, int> ele = st.top();
      int x = ele.first;
      int y = ele.second;
      st.pop();
      if (x == M && y == M)
        return true;
      if (visited[x][y])
        continue;
      visited[x][y] = true;
      if ((x <= M && y + 1 <= M) && table[x][y + 1] == '.' && !visited[x][y + 1])
        st.push({x, y + 1});
      if ((x >= 0 && y - 1 >= 0) && table[x][y - 1] == '.' && !visited[x][y - 1])
        st.push({x, y - 1});
      if ((x - 1 >= 0 && y >= 0) && table[x - 1][y] == '.' && !visited[x - 1][y])
        st.push({x - 1, y});
      if ((x + 1 <= M && y <= M) && table[x + 1][y] == '.' && !visited[x + 1][y])
        st.push({x + 1, y});
    }
    return false;
  }

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
/*                                                        */
/*               –ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫ —Ä–∞–±–æ—Ç–µ üòä                   */
/*                                                        */
/* 14-–∞—è –†–∞–±–æ—Ç–∞: –í—ã–ø–æ–ª–Ω–∏–ª –∑–∞–¥–∞—á—É 7–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞             */
/* —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–ª–∞—Å—Å stack, —Ä–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞         */
/* —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏, –æ–±—â–∞—è —Å—É—Ç—å —Ä–∞–±–æ—Ç—ã          */
/* –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å(–ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å stack –ø—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏)       */
/* –ø–æ—ç—Ç–æ–º—É —è –ø–æ–∑–≤–æ–ª–∏–ª —Å–µ–±–µ –≤–º–µ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞     */
/* –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–æ –≤—ã—Ö–æ–¥–∞, –≤—ã–≤–æ–¥–∏—Ç—å –±—É–ª–µ–≤–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–µ         */
/* –Ω–∞–ª–∏—á–∏—è –ø—É—Ç–∏ –∫ –≤—ã—Ö–æ–¥—É, –∞ —Ç–∞–∫–∂–µ —Å–ª–µ–≥–∫–∞ —É–ø—Ä–æ—Å—Ç–∏–ª –∑–∞–¥–∞—á—É  */
/* –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–≤ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—á–∞–ª–∞ –≤ —Ç–æ—á–∫–µ (0,0) –∏          */
/* –æ–±–æ–∑–Ω–∞—á–∏–≤ —Ç–æ—á–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö (N-1,N-1)         */
/*                                                        */
/* –†–µ—à–µ–Ω–æ –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–æ–ª–Ω–æ–≤–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞.  */
/*                                                        */
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
